version: "1.1"
name: SWAPI Character Schema Test
env:
  host: https://swapi.online/api
  resource: characters
  id1: 20
  id2: 4

tests:
  validate-character-id1:
    steps:
      - name: GET character id1
        http:
          url: ${{env.host}}/${{env.resource}}/${{env.id1}}
          method: GET
          headers:
            Accept: application/json
          captures:
            species_id: { jsonpath: $.species_id }
            homeworld:  { jsonpath: $.homeworld }
          check:
            status: 200
            responseTime: < 400
            schema:
              type: object
              required: [id, name, gender, skin_color, hair_color, height, eye_color, mass, homeworld, birth_year, species_id]
              properties:
                id: { type: integer }
                name: { type: string }
                gender: { type: string }
                skin_color: { type: string }
                hair_color: { type: string }
                height: { type: string }
                eye_color: { type: string }
                mass: { type: string }
                homeworld: { type: integer }
                birth_year: { type: string }
                species_id: { type: integer }
            jsonpath:
              $.id: ${{env.id1}}
              $.homeworld: 28
              $.name: "Yoda"
              $.height: "66"

  validate-character-id2:
    steps:
      - name: GET character id2
        http:
          url: ${{env.host}}/${{env.resource}}/${{env.id2}}
          method: GET
          headers:
            Accept: application/json
          captures:
            species_id: { jsonpath: $.species_id }
            homeworld:  { jsonpath: $.homeworld }
          check:
            status: 200
            responseTime: < 400
            schema:
              type: object
              required: [id, name, gender, skin_color, hair_color, height, eye_color, mass, homeworld, birth_year, species_id]
              properties:
                id: { type: integer }
                name: { type: string }
                gender: { type: string }
                skin_color: { type: string }
                hair_color: { type: string }
                height: { type: string }
                eye_color: { type: string }
                mass: { type: string }
                homeworld: { type: integer }
                birth_year: { type: string }
                species_id: { type: integer }
            jsonpath:
              $.id: ${{env.id2}}
              $.homeworld: 13
              $.name: "Darth Vader"
              $.height: "202"

